From b2366f94f0ec196647c07b9999dd862a4baa7c69 Mon Sep 17 00:00:00 2001
From: Martin Abente Lahaye <tch@sugarlabs.org>
Date: Wed, 10 Jun 2015 15:21:20 -0400
Subject: [PATCH] enhanced favorites handling

Previously, the shell determined if an activity was a favorite by
looking into the "favorite_activities" JSON file or by checking
the "activities.defaults" file.

The "activities.defaults" probed to be confusing and perceptively
incosistent [1]. During the discussions it was suggested that we
could provide a list of activities that should NOT be favorites
as defaults.

This patch series remove the use of the "activities.defaults" file
and intead introduces the use of a new "activities.hidden" file.
With this new approach, all activities are be considered favorites
unless their bundle ids are listed in the "activities.hidden" file.

This first patch extends the JSON format of the "favorite_activities"
file to track activities that have been un-favorite by the users so
we can later override the values of the "activities.hidden" file.
This is because user preferences should take precendence over default
values.

[1] http://bugs.sugarlabs.org/ticket/4841

Signed-off-by: Martin Abente Lahaye <tch@sugarlabs.org>
---
 bin/sugar.in                       |   4 +-
 data/Makefile.am                   |   2 +-
 data/activities.defaults           |  28 ----------
 data/activities.hidden             |   2 +
 src/jarabe/model/bundleregistry.py | 108 ++++++++++++++++++-------------------
 5 files changed, 59 insertions(+), 89 deletions(-)
 delete mode 100644 data/activities.defaults
 create mode 100644 data/activities.hidden

diff --git a/bin/sugar.in b/bin/sugar.in
index 366ede2..f36583b 100644
--- a/bin/sugar.in
+++ b/bin/sugar.in
@@ -28,8 +28,8 @@ if test -z "$SUGAR_MIME_DEFAULTS"; then
     export SUGAR_MIME_DEFAULTS="$sugardatadir/mime.defaults"
 fi
 
-if test -z "$SUGAR_ACTIVITIES_DEFAULTS"; then
-    export SUGAR_ACTIVITIES_DEFAULTS="$sugardatadir/activities.defaults"
+if test -z "$SUGAR_ACTIVITIES_HIDDEN"; then
+    export SUGAR_ACTIVITIES_HIDDEN="$sugardatadir/activities.hidden"
 fi
 
 export GTK2_RC_FILES="@prefix@/share/sugar/data/sugar-$SUGAR_SCALING.gtkrc"
diff --git a/data/Makefile.am b/data/Makefile.am
index 81a11f7..785bcb4 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -10,7 +10,7 @@ sugar-100.gtkrc: gtkrc.em
 
 sugardir = $(pkgdatadir)/data
 sugar_DATA =			\
-	activities.defaults	\
+	activities.hidden	\
 	group-labels.defaults	\
 	ISO-639-2_utf-8.txt	\
 	kbdconfig		\
diff --git a/data/activities.defaults b/data/activities.defaults
deleted file mode 100644
index c294b99..0000000
--- a/data/activities.defaults
+++ /dev/null
@@ -1,28 +0,0 @@
-# Activities to be automatically added to the ring after an upgrade
-
-com.garycmartin.Moon
-com.jotaro.ImplodeActivity
-com.laptop.Ruler
-edu.mit.media.ScratchActivity
-org.laptop.AbiWordActivity
-org.laptop.AcousticMeasure
-org.laptop.Analyze
-org.laptop.Calculate
-org.laptop.Chat
-org.laptop.HelpActivity
-org.laptop.MeasureActivity
-org.laptop.Memorize
-org.laptop.Oficina
-org.laptop.Pippy
-org.laptop.RecordActivity
-org.laptop.TamTamEdit
-org.laptop.TamTamJam
-org.laptop.TamTamMini
-org.laptop.TamTamSynthLab
-org.laptop.TurtleArtActivity
-org.laptop.WebActivity
-org.laptop.WikipediaActivityEN
-org.laptop.sugar.ReadActivity
-org.vpri.EtoysActivity
-vu.lux.olpc.Maze
-vu.lux.olpc.Speak
diff --git a/data/activities.hidden b/data/activities.hidden
new file mode 100644
index 0000000..e4fb677
--- /dev/null
+++ b/data/activities.hidden
@@ -0,0 +1,2 @@
+org.laptop.Terminal
+org.laptop.Log
diff --git a/src/jarabe/model/bundleregistry.py b/src/jarabe/model/bundleregistry.py
index 728dbba..61ef1a4 100644
--- a/src/jarabe/model/bundleregistry.py
+++ b/src/jarabe/model/bundleregistry.py
@@ -101,11 +101,9 @@ class BundleRegistry(GObject.GObject):
             monitor.connect('changed', self.__file_monitor_changed_cb)
             self._gio_monitors.append(monitor)
 
-        self._last_defaults_mtime = []
         self._favorite_bundles = []
         for i in range(desktop.get_number_of_views()):
             self._favorite_bundles.append({})
-            self._last_defaults_mtime.append(-1)
 
         settings = Gio.Settings('org.sugarlabs')
         self._protected_activities = settings.get_strv('protected-activities')
@@ -115,7 +113,11 @@ class BundleRegistry(GObject.GObject):
         except Exception:
             logging.exception('Error while loading favorite_activities.')
 
-        self._merge_default_favorites()
+        self._hidden_activities = []
+        self._load_hidden_activities()
+
+        self._convert_old_favorites()
+        self._scan_new_favorites()
 
         self._desktop_model = desktop.get_model()
         self._desktop_model.connect('desktop-view-icons-changed',
@@ -123,9 +125,6 @@ class BundleRegistry(GObject.GObject):
 
     def __desktop_view_icons_changed_cb(self, model):
         number_of_views = desktop.get_number_of_views()
-        if len(self._last_defaults_mtime) < number_of_views:
-            for i in range(number_of_views - len(self._last_defaults_mtime)):
-                self._last_defaults_mtime.append(-1)
         if len(self._favorite_bundles) < number_of_views:
             for i in range(number_of_views - len(self._favorite_bundles)):
                 self._favorite_bundles.append({})
@@ -190,44 +189,38 @@ class BundleRegistry(GObject.GObject):
                         raise ValueError('Invalid format in %s.' %
                                          favorites_path)
 
-                self._last_defaults_mtime[i] = \
-                    float(favorites_data['defaults-mtime'])
                 self._favorite_bundles[i] = favorite_bundles
 
-    def _merge_default_favorites(self):
-        # Only merge defaults to _DEFAULT_VIEW
-        default_activities = []
-        defaults_path = os.environ["SUGAR_ACTIVITIES_DEFAULTS"]
-        if os.path.exists(defaults_path):
-            file_mtime = os.stat(defaults_path).st_mtime
-            if file_mtime > self._last_defaults_mtime[_DEFAULT_VIEW]:
-                f = open(defaults_path, 'r')
-                for line in f.readlines():
-                    line = line.strip()
-                    if line and not line.startswith('#'):
-                        default_activities.append(line)
-                f.close()
-                self._last_defaults_mtime[_DEFAULT_VIEW] = file_mtime
-
-        if not default_activities:
-            return
-
-        for bundle_id in default_activities:
-            max_version = '0'
-            for bundle in self:
-                if bundle.get_bundle_id() == bundle_id and \
-                        NormalizedVersion(max_version) < \
-                        NormalizedVersion(bundle.get_activity_version()):
-                    max_version = bundle.get_activity_version()
-
-            key = self._get_favorite_key(bundle_id, max_version)
-            if NormalizedVersion(max_version) > NormalizedVersion('0') and \
-                    key not in self._favorite_bundles[_DEFAULT_VIEW]:
-                self._favorite_bundles[_DEFAULT_VIEW][key] = None
-
-        logging.debug('After merging: %r',
-                      self._favorite_bundles[_DEFAULT_VIEW])
-
+    def _load_hidden_activities(self):
+        path = os.environ.get('SUGAR_ACTIVITIES_HIDDEN', None)
+        try:
+            with open(path) as file:
+                for line in file.readlines():
+                    bundle_id = line.strip()
+                    if bundle_id:
+                        self._hidden_activities.append(bundle_id)
+        except IOError:
+            logging.error('Error when loading hidden activities %s', path)
+
+    def _convert_old_favorites(self):
+        for i in range(desktop.get_number_of_views()):
+            for key in self._favorite_bundles[i].keys():
+                data = self._favorite_bundles[i][key]
+                if data is None:
+                    data = {}
+                if 'favorite' not in data:
+                    data['favorite'] = True
+                self._favorite_bundles[i][key] = data
+            self._write_favorites_file(i)
+
+    def _scan_new_favorites(self):
+        for bundle in self:
+            bundle_id = bundle.get_bundle_id()
+            key = self._get_favorite_key(
+                bundle_id, bundle.get_activity_version())
+            if key not in self._favorite_bundles[_DEFAULT_VIEW]:
+                self._favorite_bundles[_DEFAULT_VIEW][key] = \
+                    {'favorite': bundle_id not in self._hidden_activities}
         self._write_favorites_file(_DEFAULT_VIEW)
 
     def get_bundle(self, bundle_id):
@@ -311,9 +304,11 @@ class BundleRegistry(GObject.GObject):
                 self.remove_bundle(installed.get_path(), emit_signals)
 
         if set_favorite:
+            favorite = not self.is_bundle_hidden(
+                bundle.get_bundle_id(), bundle.get_activity_version())
             self._set_bundle_favorite(bundle.get_bundle_id(),
                                       bundle.get_activity_version(),
-                                      True)
+                                      favorite)
 
         with self._lock:
             self._bundles.append(bundle)
@@ -382,19 +377,28 @@ class BundleRegistry(GObject.GObject):
     def _set_bundle_favorite(self, bundle_id, version, favorite,
                              favorite_view=0):
         key = self._get_favorite_key(bundle_id, version)
-        if favorite and key not in self._favorite_bundles[favorite_view]:
-            self._favorite_bundles[favorite_view][key] = None
-        elif not favorite and key in self._favorite_bundles[favorite_view]:
-            del self._favorite_bundles[favorite_view][key]
-        else:
+        if key not in self._favorite_bundles[favorite_view]:
+            self._favorite_bundles[favorite_view][key] = {}
+        elif favorite == \
+                self._favorite_bundles[favorite_view][key]['favorite']:
             return False
-
+        self._favorite_bundles[favorite_view][key]['favorite'] = favorite
         self._write_favorites_file(favorite_view)
         return True
 
     def is_bundle_favorite(self, bundle_id, version, favorite_view=0):
         key = self._get_favorite_key(bundle_id, version)
-        return key in self._favorite_bundles[favorite_view]
+        if key not in self._favorite_bundles[favorite_view]:
+            return False
+        return self._favorite_bundles[favorite_view][key]['favorite']
+
+    def is_bundle_hidden(self, bundle_id, version):
+        key = self._get_favorite_key(bundle_id, version)
+        if key in self._favorite_bundles[_DEFAULT_VIEW]:
+            data = self._favorite_bundles[_DEFAULT_VIEW][key]
+            return data['favorite'] is False
+        else:
+            return bundle_id in self._hidden_activities
 
     def is_activity_protected(self, bundle_id):
         return bundle_id in self._protected_activities
@@ -405,8 +409,6 @@ class BundleRegistry(GObject.GObject):
             raise ValueError('Bundle %s %s not favorite' %
                              (bundle_id, version))
 
-        if self._favorite_bundles[favorite_view][key] is None:
-            self._favorite_bundles[favorite_view][key] = {}
         if 'position' not in self._favorite_bundles[favorite_view][key] or \
                 [x, y] != \
                 self._favorite_bundles[favorite_view][key]['position']:
@@ -424,7 +426,6 @@ class BundleRegistry(GObject.GObject):
         """
         key = self._get_favorite_key(bundle_id, version)
         if key not in self._favorite_bundles[favorite_view] or \
-                self._favorite_bundles[favorite_view][key] is None or \
                 'position' not in self._favorite_bundles[favorite_view][key]:
             return (-1, -1)
         else:
@@ -438,7 +439,6 @@ class BundleRegistry(GObject.GObject):
             path = env.get_profile_path('favorite_activities_%d' %
                                         (favorite_view))
         favorites_data = {
-            'defaults-mtime': self._last_defaults_mtime[favorite_view],
             'favorites': self._favorite_bundles[favorite_view]}
         json.dump(favorites_data, open(path, 'w'), indent=1)
 
 
-- 
2.1.0

